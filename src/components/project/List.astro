---
import { Icon } from 'astro-icon/components';
import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';
import type { ImageMetadata } from 'astro';

interface Project {
  id: string;
  slug: string;
  permalink: string;
  title: string;
  excerpt: string;
  image?: string | ImageMetadata; // Better typed image property
  category?: string;
  tags?: Array<string>;
  author?: string;
  publishDate: Date;
}

interface Props {
  projects: Array<Project>;
}

const { projects } = Astro.props;
---

<div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3 -mb-6">
  {
    projects.map((project) => (
      <article class="mb-6 transition neo-border neo-border-normal neo-shadow-normal neo-hover overflow-hidden">
        <div class="relative h-48 md:h-64 bg-gray-400 dark:bg-slate-700">
          {project.image ? (
            <a href={getPermalink(project.permalink, 'project')}>
              <img
                src={typeof project.image === 'string' ? project.image : ''}
                class="w-full h-full object-cover"
                width={400}
                height={224}
                alt={project.title}
                loading="lazy"
                decoding="async"
              />
            </a>
          ) : (
            <div class="w-full h-full flex items-center justify-center bg-primary/10">
              <Icon name="tabler:code" class="h-16 w-16 text-primary" />
            </div>
          )}
        </div>
        <div class="p-4">
          <h3 class="mb-2 text-xl font-bold leading-tight font-heading">
            <a
              href={getPermalink(project.permalink, 'project')}
              class="hover:text-primary transition ease-in duration-200"
            >
              {project.title}
            </a>
          </h3>
          <p class="text-muted dark:text-slate-400 line-clamp-2 mb-4">{project.excerpt}</p>
          <div class="flex justify-between items-center border-t border-dashed border-primary/30 pt-2 mt-2">
            <span class="text-sm">
              <time datetime={project.publishDate.toISOString()}>
                {getFormattedDate(project.publishDate)}
              </time>
            </span>
            <a 
              href={getPermalink(project.permalink, 'project')}
              class="text-sm font-semibold text-primary neo-border neo-border-normal px-2 py-1 neo-shadow-normal neo-hover"
            >
              View Project
            </a>
          </div>
        </div>
      </article>
    ))
  }
</div> 