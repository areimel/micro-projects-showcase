---
import { Icon } from 'astro-icon/components';
import type { CollectionEntry } from 'astro:content';
import type { ImageMetadata } from 'astro';

import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';
import SocialShare from '~/components/common/SocialShare.astro';

import { getFormattedDate } from '~/utils/utils';

interface Props {
  project: CollectionEntry<'project'> & {
    image?: ImageMetadata | string;
  };
  url: string | URL;
}

const { project, url } = Astro.props;
const { Content } = project;

const publishDate = project.publishDate ? getFormattedDate(project.publishDate) : '';
const updateDate = project.updateDate ? getFormattedDate(project.updateDate) : '';
---

<section class="py-8 sm:py-16 lg:py-20 mx-auto">
  <article>
    <header class={project.image ? 'text-center' : ''}>
      <div class="flex justify-between flex-col sm:flex-row max-w-3xl mx-auto mt-0 mb-2 px-4 sm:px-6 sm:items-center">
        <p>
          {
            publishDate && (
              <time datetime={project.publishDate.toISOString()}>
                {publishDate}
              </time>
            )
          }
          {
            publishDate && updateDate && project.publishDate.getTime() !== project.updateDate.getTime() && (
              <>
                <span> Â· Last updated: </span>
                <time datetime={project.updateDate.toISOString()}>
                  {updateDate}
                </time>
              </>
            )
          }
        </p>
      </div>
      <h1
        class="px-4 sm:px-6 max-w-3xl mx-auto text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-8 font-heading"
      >
        {project.title}
      </h1>
      {
        project.image ? (
          <Image
            src={project.image}
            class="max-w-full lg:max-w-6xl mx-auto mb-6 sm:rounded-md bg-gray-400 dark:bg-slate-700"
            widths={[400, 900]}
            sizes="(max-width: 900px) 400px, 900px"
            alt={project.title}
            loading="eager"
            width={900}
            height={506}
            loading="eager"
            decoding="async"
          />
        ) : (
          <div class="max-w-3xl mx-auto px-4 sm:px-6">
            <div class="border-t dark:border-slate-700" />
          </div>
        )
      }
    </header>
    <div
      class="mx-auto px-6 sm:px-6 max-w-3xl prose prose-lg lg:prose-xl dark:prose-invert dark:prose-headings:text-slate-300 prose-md prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-primary dark:prose-a:text-blue-400 prose-img:rounded-md prose-img:shadow-lg mt-8"
    >
      {
        // Display the sandbox component here
        <div class="sandbox-container mb-8 p-4 border-2 border-dashed border-primary/40 rounded-lg">
          <!-- Project Sandbox will be loaded here -->
          <slot />
        </div>
      }

      {Content ? <Content /> : <Fragment set:html={project.content || ''} />}
    </div>
    <div class="mx-auto px-6 sm:px-6 max-w-3xl mt-8 flex justify-between flex-col sm:flex-row">
      <div class="mr-2">
        {
          project.tags && project.tags.length > 0 && (
            <PostTags tags={project.tags} class="mr-5" />
          )
        }
      </div>
      <SocialShare url={url} text={project.title} class="mt-5 sm:mt-1 align-middle text-gray-500 dark:text-slate-600" />
    </div>
  </article>
</section> 