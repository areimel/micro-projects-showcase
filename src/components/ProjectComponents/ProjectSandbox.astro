---
interface Props {
  /**
   * Title for the sandbox area 
   */
  title?: string;
  /**
   * Custom height for the sandbox at desktop size (default is square 1:1)
   */
  height?: string;
  /**
   * Optional background color
   */
  bgColor?: string;
  /**
   * Optional border thickness: normal (2px) or thick (4px)
   */
  borderStyle?: 'normal' | 'thick';
  /**
   * Whether to apply the shadow effect
   */
  hasShadow?: boolean;
  /**
   * Whether to apply the hover effect
   */
  hasHoverEffect?: boolean;
  /**
   * Custom CSS class to apply to the container
   */
  class?: string;
}

const {
  title,
  height,
  bgColor,
  borderStyle = 'normal', // default to normal border
  hasShadow = true, // default to having a shadow
  hasHoverEffect = true, // default to having hover effect
  class: className = '',
} = Astro.props;

// Set classes based on props
const borderClass = borderStyle === 'thick' ? 'neo-border-thick' : 'neo-border-normal';
const shadowClass = hasShadow ? 'neo-shadow-normal' : '';
const hoverClass = hasHoverEffect ? 'neo-hover' : '';

// Combined classes
const containerClasses = `sandbox-container neo-border ${borderClass} ${shadowClass} ${hoverClass} ${className}`;

// Custom style with height if provided
const customStyle = [
  bgColor ? `background-color: ${bgColor}` : '',
  height ? `height: ${height}` : ''
].filter(Boolean).join(';');
---

<div class={containerClasses} style={customStyle}>
  {title && <div class="sandbox-title">{title}</div>}
  <div class="sandbox-content">
    <slot />
  </div>
</div>

<style>
  .sandbox-container {
    width: 100%;
    min-height: 300px;
    background-color: var(--aw-color-bg-page, #ffffff);
    border-color: var(--neo-border-color, #000000);
    position: relative;
    margin: 1rem 0;
    padding: 1rem;
    overflow: hidden;
  }

  .sandbox-title {
    position: absolute;
    top: 0;
    left: 0;
    background-color: var(--neo-border-color, #000000);
    color: var(--aw-color-bg-page, #ffffff);
    padding: 0.25rem 0.75rem;
    font-weight: bold;
    font-size: 0.875rem;
    z-index: 10;
  }

  .sandbox-content {
    width: 100%;
    height: 100%;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  /* Default square aspect ratio at desktop size */
  @media (min-width: 768px) {
    .sandbox-container:not([style*="height"]) {
      aspect-ratio: 1 / 1;
    }
  }

  /* Dark mode adjustments */
  :global(.dark) .sandbox-container {
    background-color: var(--aw-color-bg-page-dark, #0a0a0a);
  }
</style> 