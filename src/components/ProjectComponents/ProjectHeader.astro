---
import { Icon } from 'astro-icon/components';
import { getFormattedDate } from '~/utils/utils';
import Image from '~/components/common/Image.astro';


interface Props {
  title: string;
  technologies?: string[];
  client?: string;
  duration?: string;
  role?: string;
  liveUrl?: string;
  githubUrl?: string;
  publishDate?: Date;
  author?: string;
  category?: string;
  readingTime?: string;
  image?: string;
  description?: string;
}

const { 
  title, 
  technologies = [], 
  liveUrl, 
  githubUrl, 
  publishDate, 
  author, 
  readingTime, 
  image,
  description
} = Astro.props;
---

<section class="mb-8">
  <div class="w-full h-full max-w-screen-2xl mx-auto">
    <div class="project-grid">
      
      <!-- Cell 1: Project title and metadata -->
      <div class="div1 project-cell !bg-terminal-500">
        <p class="">
          <Icon name="tabler:clock" class="w-4 h-4 inline-block -mt-0.5 " />
          <time datetime={publishDate ? publishDate.toISOString() : ''} class="inline-block">
            {publishDate && getFormattedDate(publishDate)}
          </time>
          {
            author && (
              <>
                {' '}
                · <Icon name="tabler:user" class="w-4 h-4 inline-block -mt-0.5 " />
                <span class="inline-block">{author}</span>
              </>
            )
          }
          {
            readingTime && (
              <>
                &nbsp;· <span>{readingTime}</span> min read
              </>
            )
          }
        </p>

        <h1 class="text-4xl md:text-5xl font-bold leading-10 tracking-tighter mb-4 font-heading ">
          {title}
        </h1>
      </div>
      
      <!-- Cell 2: Project image -->
      <div class="div2 project-cell flex justify-center items-center p-0 overflow-hidden">
        <Image
          src={image}
          class="w-full h-auto object-cover "
          widths={[400, 900]}
          sizes="(max-width: 900px) 400px, 900px"
          alt={title || ''}
          width={900}
          height={506}
          loading="eager"
          decoding="async"
        />
      </div>
      
      <!-- Cell 3: Project details -->
      <div class="div3 project-cell">
        <div class="font-bold font-heading  text-glow-subtle inline-block text-lg border-b  pb-2 mb-2">
          //Technology
        </div>

        <div>
          {technologies.length > 0 && (
            <ul class="customList">
              {technologies.map((tech) => (
                <li class="">
                  {tech}
                </li>
              ))}
            </ul>
          )}
        </div>
      </div>
      
      <!-- Cell 4: Project description -->
      <div class="div4 project-cell">
        <div class="font-bold font-heading  text-glow-subtle inline-block text-lg border-b  pb-2 mb-2">
          //Project_Description
        </div>
        {description && (
          <p class="">{description}</p>
        )}
      </div>
      
      <!-- Cell 5: Project links -->
      <div class="div5 project-cell">
        <div class="flex justify-center gap-4">
          {liveUrl && (
            <a href={liveUrl} target="_blank" class="textLink  ">
              <Icon name="tabler:world" class="w-5 h-5 inline-block mr-1" />
              View Live Site
            </a>
          )}
          <span>//</span>
          {githubUrl && (
            <a href={githubUrl} target="_blank" class="textLink  ">
              <Icon name="tabler:brand-github" class="w-5 h-5 inline-block mr-1" />
              View on GitHub
            </a>
          )}
        </div>
      </div>

    </div>
  </div>
</section>

<style>
  .project-grid {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 15px;
    width: 100%;
    height: 100%;
    /* Define grid areas using matrix notation */
    grid-template-areas: 
      "title title title details details"
      "image image image desc desc"
      "image image image links links";
  }
  
  /* Assign each div to its corresponding grid area */
  .div1 {
    grid-area: title;
  }
  
  .div2 {
    grid-area: image;
  }
  
  .div3 {
    grid-area: details;
  }
  
  .div4 {
    grid-area: desc;
  }
  
  .div5 {
    grid-area: links;
  }
  
  /* Responsive adjustments for smaller screens */
  @media (max-width: 768px) {
    .project-grid {
      grid-template-columns: 1fr;
      grid-template-areas: 
        "title"
        "image"
        "details"
        "desc"
        "links";
      gap: 16px;
    }
  }

  .project-cell {
    @apply p-6 shadow-md flex flex-col justify-start border ;
  }

  /* Customizing the list markers */
  ul.customList {
    @apply text-sm list-outside pl-4;
  }
  
  ul.customList li::marker {
    content: "> ";
  }
</style>

